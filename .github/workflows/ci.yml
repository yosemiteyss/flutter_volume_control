on:
  push:
    branches:
      - main
      - 'release/**'
  pull_request:
    branches:
      - main
      - 'release/**'

env:
  FLUTTER_CHANNEL: 'stable'
  FLUTTER_VERSION: '3.7.1'

jobs:
#  build_example_android:
#    runs-on: [ self-hosted, linux ]
#    steps:
#      - uses: actions/checkout@v3
#      - uses: actions/setup-java@v2
#        with:
#          distribution: 'zulu'
#          java-version: '11'
#      - uses: subosito/flutter-action@v2
#        with:
#          channel: ${{ env.FLUTTER_CHANNEL }}
#          flutter-version: ${{ env.FLUTTER_VERSION }}
#      - run: flutter pub get
#      - run: cd ./example && flutter build apk
#      - run: echo "build success!"

  integration_test_android:
    runs-on: [ self-hosted, linux ]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: '11'
      - uses: subosito/flutter-action@v2
        with:
          channel: ${{ env.FLUTTER_CHANNEL }}
          flutter-version: ${{ env.FLUTTER_VERSION }}
      - run: flutter pub get
      - uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 29
          script: cd ./example && flutter test integration_test
      - run: echo "test success!"

#  build_example_linux:
#    runs-on: [ self-hosted, linux ]
#    steps:
#      - uses: actions/checkout@v3
#      - uses: subosito/flutter-action@v2
#        with:
#          channel: ${{ env.FLUTTER_CHANNEL }}
#          flutter-version: ${{ env.FLUTTER_VERSION }}
#      - run: flutter config --enable-linux-desktop
#      - run: flutter pub get
#      - run: cd ./example && flutter build linux
#      - run: echo "build success!"
#
  #  integration_test_linux:
  #    runs-on: [ self-hosted, linux ]
  #    steps:
  #      - uses: actions/checkout@v3
  #      - uses: subosito/flutter-action@v2
  #        with:
  #          channel: ${{ env.FLUTTER_CHANNEL }}
  #          flutter-version: ${{ env.FLUTTER_VERSION }}
  #      - run: flutter config --enable-linux-desktop
  #      - run: flutter pub get
  #      - run: cd ./example && flutter test integration_test
  #      - run: echo "test success!"

#  build_example_windows:
#    runs-on: [ self-hosted, windows ]
#    steps:
#      - uses: actions/checkout@v3
#      - uses: subosito/flutter-action@v2
#        with:
#          channel: ${{ env.FLUTTER_CHANNEL }}
#          flutter-version: ${{ env.FLUTTER_VERSION }}
#      - run: flutter config --enable-windows-desktop
#      - run: flutter pub get
#      - run: (cd ./example) -and (flutter build windows)
#      - run: echo "build success!"
#
#  integration_test_windows:
#    runs-on: [ self-hosted, windows ]
#    steps:
#      - uses: actions/checkout@v3
#      - uses: subosito/flutter-action@v2
#        with:
#          channel: ${{ env.FLUTTER_CHANNEL }}
#          flutter-version: ${{ env.FLUTTER_VERSION }}
#      - run: flutter config --enable-windows-desktop
#      - run: flutter pub get
#      - run: (cd ./example) -and (flutter test integration_test)
#      - run: echo "test success!"

#  build_example_ios:
#    runs-on: [ self-hosted, macos ]
#    steps:
#      - uses: actions/checkout@v3
#      - uses: subosito/flutter-action@v2
#        with:
#          channel: ${{ env.FLUTTER_CHANNEL }}
#          flutter-version: ${{ env.FLUTTER_VERSION }}
#      - run: flutter pub get
#      - run: cd ./example && flutter build ios --no-codesign
#      - run: echo "build success!"

#  build_example_macos:
#    runs-on: [ self-hosted, macos ]
#    steps:
#      - uses: actions/checkout@v3
#      - uses: subosito/flutter-action@v2
#        with:
#          channel: ${{ env.FLUTTER_CHANNEL }}
#          flutter-version: ${{ env.FLUTTER_VERSION }}
#      - run: flutter config --enable-macos-desktop
#      - run: flutter pub get
#      - run: cd ./example && flutter build macos
#      - run: echo "build success!"